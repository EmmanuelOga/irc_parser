== IRCParser

A ruby 1.9.x parser for IRC messages which includes commands, errors and replies classese according to the IRC RFCs definitions.

This library does not deal at all with networking.

== Goals

In every irc library I've seen people implement the various irc messages again and again.

IRCParser tackles that boring task so the hard work in making the RFC compliant IRC messages can be shared across projects.

This gem does _not_ provide an irc server, and irc client or a cool new DSL to implement IRC bots (though I hope the authors of those kind of projects will be able to capitalize on the use of IRCParser).

= Parsing Messages

The parser can be run so it returns the raw components of an irc message ([prefix, command, *params]), or an specific class for each kind of message constructed from those parts.

The parser is quite strict so it will expect the IRC delimiters in all messages to parse (i.e. all messages must end with '\r\n').

  require 'irc_parser'
  IRCParser::Parser.run(":Angel PRIVMSG Wiz :Hello are you receiving this message?\r\n") # notice final \r\n
  # ["Angel", "PRIVMSG", "Wiz", "Hello are you receiving this message ?"]

And, to get a subclass of IRCParser::Message instead of an array of components:

  require 'irc_parser/messages'
  msg = IRCParser.parse(":Angel PRIVMSG Wiz :Hello are you receiving this message?\r\n")
  # <IRCParser::Messages::Privmsg:0x00000001476370 @params=["Wiz", "Hello are you receiving this message?"], @prefix="Angel">

  msg.identifier # => "PRIVMSG"
  msg.to_sym     # => :priv_msg
  msg.prefix     # => "Angel"
  msg.params     # => ["Wiz", "Hello are you receiving this message?"]
  msg.from       # => "Angel"
  msg.target     # => "Wiz"
  msg.body       # => "Hello are you receiving this message?"

== Generating Messages

  msg = IRCParser::Messages::PrivMsg.new
  msg.from   = "Wiz"
  msg.target = "Angel"
  msg.body   = "Hello World!"
  msg.to_s   # => ":Wiz PRIVMSG Angel :Hello World!\r\n"

There is also a shortcut:

  require 'irc_parser/messages'
  msg = IRCParser.message(:privmsg) do |m|
    msg.from   = "Wiz"
    msg.target = "Angel"
    msg.body   = "Hello World!"
  end
  msg.to_s # => ":Wiz PRIVMSG Angel :Hello World!\r\n"

== TODO

* Documentation!
* It would be nice to add support for parsing/generating extended mirc messages.
* Most severs/clients do not implement the messages exactly as defined on the RFCs (sometimes http://www.mirc.net/raws/ was used as reference). So, some messages may require adjustments to be usable in the wild.
* 1459 compliant, with some of the messages updated to the rfc 2812. Fixes/updates are warmly welcome!

== AUTHORS

A lot of projects where reviewed while implementing this library. My hope is that we can join forces to get one of the most boring parts of IRC development done (parsing/generating messages).

I may or may not have stolen something from one of these. If I forget about anyone please ping me so I can include you here.

* http://github.com/brodock/irk : Ragel parser and other portions where taken from irk.

Other projects I examined (in vim-sort order):

* http://git.sv.gnu.org/weechat.git
* http://github.com/ChaosR/IdleIRCd
* http://github.com/RISCfuture/autumn
* http://github.com/Sutto/marvin
* http://github.com/Syd/twitrc
* http://github.com/TheLinx/MoonIRC
* http://github.com/alexyoung/twitterircbot
* http://github.com/andrzejkrzywda/ruby-ircd
* http://github.com/apeiros/silverplatter-irc
* http://github.com/bingos/parse-irc
* http://github.com/cho45/net-irc
* http://github.com/danopia/ooc-ircd
* http://github.com/danopia/rbircd
* http://github.com/injekt/cinch
* http://github.com/konn/rupircd
* http://github.com/myelin/irc-proxy
* http://github.com/purzelrakete/mini
* http://github.com/tagoh/prune
* http://github.com/tsion/on_irc
* http://ngircd.barton.de
